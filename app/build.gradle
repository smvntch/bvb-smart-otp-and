/**
 * VuNA:
 * This plugins are applied specifically to the application module, not the entire project.
 * In a typical Android project, you might have multiple modules -
 * for example, an app module, a library module, etc.
 * Each of these modules will have its own build.gradle file,
 * and the plugins applied in each build.gradle file affect only that specific module.
 * Other modules in the project will have their own build.gradle files
 * and may use different plugins, such as 'com.android.library' for library modules.
 */
plugins {
    /**
     * VuNA:
     * The id 'com.android.application' line is found in the build.gradle file of
     * the application module of your Android project.
     * This plugin provides the necessary Android-specific configurations and tasks
     * needed to build an Android application.
     * So, in this case, the 'com.android.application' plugin is applied only to the module
     * where this build.gradle file is located, which is the application module.
     */
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

/**
 * VuNA:
 * The 'android' block contains configurations specific to the Android build.
 * It includes the compile SDK version, default configurations like application ID,
 * minimum SDK version, target SDK version, and version details.
 * It also includes build types, compile options, and other Android-specific configurations.
 */
android {
    compileSdkVersion 34
//    buildToolsVersion 34
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.bvb.sotp"
        minSdkVersion 24
        targetSdkVersion 34
        compileSdkVersion 34
        versionCode 6
        versionName "5.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
//        debug {
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }

//        13/6: bị lỗi không xác thực được QR CODE, PUSH và kích hoạt user, sau khi bỏ phần release thì bình thường
//        release {
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
    }
    compileOptions {
        sourceCompatibility 11
        targetCompatibility 11
    }
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

androidExtensions {
    experimental = true
}


/**
 * VuNA:
 * The dependencies block lists all the libraries that the project depends on.
 * These libraries are downloaded and included in the build process by Gradle.
 * The dependencies include standard Android libraries, Kotlin standard library,
 * testing libraries, and various third-party libraries.
 */
dependencies {

    /**
     * The `implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"` line
     * is located in the `build.gradle` file of your app module.
     * Gradle downloads and stores the dependencies in a cache directory
     * to speed up subsequent builds. The location of this cache directory can vary:
     * - On Windows, it's typically located at `%USERPROFILE%\.gradle\caches\modules-2\`.
     * - On macOS and Linux, it's typically located at `~/.gradle/caches/modules-2/`.
     * They are organized by group, name, and version, which correspond to the parts
     * of the dependency coordinates you specify in your `build.gradle` file.
     * For example, the `org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version` dependency
     * would be located in a directory structure similar to
     * `~/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/$kotlin_version/`.
     * Please note that these files are meant to be managed by Gradle,
     * and you typically don't need to interact with them directly.
     * If you need to force Gradle to re-download the dependencies,
     * you can use the `--refresh-dependencies` option when running your Gradle build.
     * Remember, `$kotlin_version` is a variable defined in the `build.gradle` file
     * at the project level, which is `build.gradle (Project: YourProjectName)`.
     * This variable holds the version of Kotlin used in your project.
     */
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "org.jetbrains.anko:anko-common:0.10.5"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'com.jakewharton:butterknife:10.2.3'
    kapt 'com.jakewharton:butterknife-compiler:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'com.asksira.android:loopingviewpager:1.1.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.eightbitlab:blurview:1.5.0'
    implementation 'com.github.bhargavms:DotLoader:1.1.1'
//    implementation 'com.github.antonKozyriatskyi:CircularProgressIndicator:1.2.2'
//    implementation project(':centagateSdk')
//    implementation 'commons-codec:1.10'
    implementation files('libs/centagate-release-20210716.aar')

    implementation 'com.github.HenriqueMachine:EasyFingerPrint:1.0.1'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'
    implementation 'com.github.d-max:spots-dialog:1.1@aar'

    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:3.0.3'
//    implementation 'com.alexgilleran:icesoap:1.1.1'
    implementation "androidx.biometric:biometric:1.1.0"
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.wei.android.lib:fingerprintidentify:1.2.6'
    implementation 'me.dm7.barcodescanner:zxing:1.9.13'
// Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:28.0.1')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'io.github.ParkSangGwon:tedpermission:2.3.0'

}

/**
 * VuNA:
 * The apply plugin lines at the end of the file are used
 * to apply additional plugins to the project.
 * In this case, the Google Services plugin and the Realm Android plugin are applied.
 */
apply plugin: 'com.google.gms.google-services'  // Google Services plugin
apply plugin: 'realm-android'
